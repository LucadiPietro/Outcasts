//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Keys"",
            ""id"": ""4ca8c826-76b2-4e03-b547-49651de07e25"",
            ""actions"": [
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""b1cf6716-bda2-4610-b1d2-1e5f0fec1c10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""669686a1-7647-4761-826d-a0c3d2b4f0c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""7dcf211f-62fd-4cb9-a660-741ce8e4026a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""e04121f0-792b-475a-8fd5-0f10e010b235"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LB"",
                    ""type"": ""Button"",
                    ""id"": ""9c370683-4873-4ebd-bf70-90f624bc7ee7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RB"",
                    ""type"": ""Button"",
                    ""id"": ""77efcde8-84c3-49bf-aa70-b6ec17bec0ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LT"",
                    ""type"": ""Button"",
                    ""id"": ""757ae782-9c5a-4861-877e-6df0323c680f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RT"",
                    ""type"": ""Button"",
                    ""id"": ""4e344e79-1e84-43f8-ba0f-27a7977a11f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartPause"",
                    ""type"": ""Button"",
                    ""id"": ""a2fa0473-3194-4b81-9e7d-aba1f1a1cfb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""be4c1ada-a75f-466e-8fcf-57d46375d9f9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96680cf7-ce1b-4ba5-bd9a-147d4fdd2f7b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15b5e54f-2a3d-45a2-82d2-7ec69481caff"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12d39f08-f617-427f-94bd-598eaf378b80"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a87a087-9344-4d65-b3ea-ab24a4fb28a3"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51b2986c-8c67-467c-97bb-b8f29f39d9eb"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df77814e-859a-467a-bb8c-afad81e43ff7"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b48e4df-07c7-4f22-b737-cd9983e82dba"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c98b21c7-6f07-470b-bf26-9010172b787d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keys
        m_Keys = asset.FindActionMap("Keys", throwIfNotFound: true);
        m_Keys_A = m_Keys.FindAction("A", throwIfNotFound: true);
        m_Keys_B = m_Keys.FindAction("B", throwIfNotFound: true);
        m_Keys_X = m_Keys.FindAction("X", throwIfNotFound: true);
        m_Keys_Y = m_Keys.FindAction("Y", throwIfNotFound: true);
        m_Keys_LB = m_Keys.FindAction("LB", throwIfNotFound: true);
        m_Keys_RB = m_Keys.FindAction("RB", throwIfNotFound: true);
        m_Keys_LT = m_Keys.FindAction("LT", throwIfNotFound: true);
        m_Keys_RT = m_Keys.FindAction("RT", throwIfNotFound: true);
        m_Keys_StartPause = m_Keys.FindAction("StartPause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keys
    private readonly InputActionMap m_Keys;
    private IKeysActions m_KeysActionsCallbackInterface;
    private readonly InputAction m_Keys_A;
    private readonly InputAction m_Keys_B;
    private readonly InputAction m_Keys_X;
    private readonly InputAction m_Keys_Y;
    private readonly InputAction m_Keys_LB;
    private readonly InputAction m_Keys_RB;
    private readonly InputAction m_Keys_LT;
    private readonly InputAction m_Keys_RT;
    private readonly InputAction m_Keys_StartPause;
    public struct KeysActions
    {
        private @Controls m_Wrapper;
        public KeysActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @A => m_Wrapper.m_Keys_A;
        public InputAction @B => m_Wrapper.m_Keys_B;
        public InputAction @X => m_Wrapper.m_Keys_X;
        public InputAction @Y => m_Wrapper.m_Keys_Y;
        public InputAction @LB => m_Wrapper.m_Keys_LB;
        public InputAction @RB => m_Wrapper.m_Keys_RB;
        public InputAction @LT => m_Wrapper.m_Keys_LT;
        public InputAction @RT => m_Wrapper.m_Keys_RT;
        public InputAction @StartPause => m_Wrapper.m_Keys_StartPause;
        public InputActionMap Get() { return m_Wrapper.m_Keys; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeysActions set) { return set.Get(); }
        public void SetCallbacks(IKeysActions instance)
        {
            if (m_Wrapper.m_KeysActionsCallbackInterface != null)
            {
                @A.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnA;
                @B.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnB;
                @B.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnB;
                @B.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnB;
                @X.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnX;
                @Y.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnY;
                @LB.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnLB;
                @LB.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnLB;
                @LB.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnLB;
                @RB.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnRB;
                @RB.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnRB;
                @RB.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnRB;
                @LT.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnLT;
                @LT.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnLT;
                @LT.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnLT;
                @RT.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnRT;
                @RT.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnRT;
                @RT.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnRT;
                @StartPause.started -= m_Wrapper.m_KeysActionsCallbackInterface.OnStartPause;
                @StartPause.performed -= m_Wrapper.m_KeysActionsCallbackInterface.OnStartPause;
                @StartPause.canceled -= m_Wrapper.m_KeysActionsCallbackInterface.OnStartPause;
            }
            m_Wrapper.m_KeysActionsCallbackInterface = instance;
            if (instance != null)
            {
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
                @LB.started += instance.OnLB;
                @LB.performed += instance.OnLB;
                @LB.canceled += instance.OnLB;
                @RB.started += instance.OnRB;
                @RB.performed += instance.OnRB;
                @RB.canceled += instance.OnRB;
                @LT.started += instance.OnLT;
                @LT.performed += instance.OnLT;
                @LT.canceled += instance.OnLT;
                @RT.started += instance.OnRT;
                @RT.performed += instance.OnRT;
                @RT.canceled += instance.OnRT;
                @StartPause.started += instance.OnStartPause;
                @StartPause.performed += instance.OnStartPause;
                @StartPause.canceled += instance.OnStartPause;
            }
        }
    }
    public KeysActions @Keys => new KeysActions(this);
    public interface IKeysActions
    {
        void OnA(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnLB(InputAction.CallbackContext context);
        void OnRB(InputAction.CallbackContext context);
        void OnLT(InputAction.CallbackContext context);
        void OnRT(InputAction.CallbackContext context);
        void OnStartPause(InputAction.CallbackContext context);
    }
}
