//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Utility/Input/InputMapping.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMapping : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMapping()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMapping"",
    ""maps"": [
        {
            ""name"": ""ActionMap"",
            ""id"": ""93e92e93-cab3-4c7d-afc7-dd1b115d23d7"",
            ""actions"": [
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""979fc182-6a82-4a5e-b41a-5bcc5c275ac3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""7dbcff9d-ff21-4414-97c1-e6f19c942b06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""75f09feb-6db1-470d-abec-c01e12e3e1d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""255898d3-2eb6-46e0-9c9c-f282ae52c28d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""South"",
                    ""type"": ""Button"",
                    ""id"": ""798b18dd-80f4-4a45-b959-9371f7509ed6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""North"",
                    ""type"": ""Button"",
                    ""id"": ""6b03523b-778c-4ed2-a6f1-9d17c9133a14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""West"",
                    ""type"": ""Button"",
                    ""id"": ""60347f65-ce50-477b-91e2-734b097470d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""East"",
                    ""type"": ""Button"",
                    ""id"": ""52928d49-e4d5-4970-941a-6bcc0d944c37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LT"",
                    ""type"": ""Button"",
                    ""id"": ""6c3f8fb3-925b-45d1-bdb2-ae8d06a2278f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LB"",
                    ""type"": ""Button"",
                    ""id"": ""a2f767a1-22a0-4a00-bf7b-2df4b52baade"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RT"",
                    ""type"": ""Button"",
                    ""id"": ""3eda2643-6c03-4236-8ac2-53f52d4b9873"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RB"",
                    ""type"": ""Button"",
                    ""id"": ""a408d72b-6ae2-4a33-afec-461a683ba210"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""6519cbd8-a96d-4c4c-90f1-9a8b5b0a1b7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""99fa67e8-6f7d-4d5f-b9e0-2f97c65bf7e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""35e5bfbe-796a-40da-bff5-c17848de28d1"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f9062e8-e627-4798-9e38-9c9a812408f4"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a238521-c7b1-4d76-abde-64eb552a061e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22a0b949-dba1-45ad-b238-7f74476c420d"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42cd3f2d-2ceb-4e60-ab4e-124e7c3d24f3"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d59fd0e6-d35e-4a1d-8504-89de18252d5e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50403a1e-02bd-44e1-85cd-28c447038b2b"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dceea654-1dd7-495e-8756-f6e19d303fec"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd23593d-a441-40f7-9885-b812b5f601a3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""922b8236-5cb5-4bc1-aa8c-4117f36ba342"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17a6c53e-160a-41bc-b24b-43d360c6f7bc"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bae669d-defb-46a5-9e3c-6943192ca8c2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4799ce3d-381a-4e72-9d90-fabc7c94929b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e23b9be0-be1b-44d2-aed4-163bdeca95ed"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7c255df-67d6-4b09-b5e4-779c08812ee8"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca064434-bcb7-4902-a70a-74eade868663"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb328217-126e-4b01-841f-e4c2769a5c45"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2260e1f5-7884-46b0-9f9a-b64c099dff6b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01eeb1f0-0363-4210-8f27-139cbba9c7e8"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aef2530d-c648-489a-be45-ac74d0da1a7f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a4b1fd0-c573-4248-9553-9723d3af14fa"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6182762-4568-4069-8804-d843f4d6bf70"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionMap
        m_ActionMap = asset.FindActionMap("ActionMap", throwIfNotFound: true);
        m_ActionMap_Right = m_ActionMap.FindAction("Right", throwIfNotFound: true);
        m_ActionMap_Down = m_ActionMap.FindAction("Down", throwIfNotFound: true);
        m_ActionMap_Up = m_ActionMap.FindAction("Up", throwIfNotFound: true);
        m_ActionMap_Left = m_ActionMap.FindAction("Left", throwIfNotFound: true);
        m_ActionMap_South = m_ActionMap.FindAction("South", throwIfNotFound: true);
        m_ActionMap_North = m_ActionMap.FindAction("North", throwIfNotFound: true);
        m_ActionMap_West = m_ActionMap.FindAction("West", throwIfNotFound: true);
        m_ActionMap_East = m_ActionMap.FindAction("East", throwIfNotFound: true);
        m_ActionMap_LT = m_ActionMap.FindAction("LT", throwIfNotFound: true);
        m_ActionMap_LB = m_ActionMap.FindAction("LB", throwIfNotFound: true);
        m_ActionMap_RT = m_ActionMap.FindAction("RT", throwIfNotFound: true);
        m_ActionMap_RB = m_ActionMap.FindAction("RB", throwIfNotFound: true);
        m_ActionMap_Start = m_ActionMap.FindAction("Start", throwIfNotFound: true);
        m_ActionMap_Select = m_ActionMap.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionMap
    private readonly InputActionMap m_ActionMap;
    private IActionMapActions m_ActionMapActionsCallbackInterface;
    private readonly InputAction m_ActionMap_Right;
    private readonly InputAction m_ActionMap_Down;
    private readonly InputAction m_ActionMap_Up;
    private readonly InputAction m_ActionMap_Left;
    private readonly InputAction m_ActionMap_South;
    private readonly InputAction m_ActionMap_North;
    private readonly InputAction m_ActionMap_West;
    private readonly InputAction m_ActionMap_East;
    private readonly InputAction m_ActionMap_LT;
    private readonly InputAction m_ActionMap_LB;
    private readonly InputAction m_ActionMap_RT;
    private readonly InputAction m_ActionMap_RB;
    private readonly InputAction m_ActionMap_Start;
    private readonly InputAction m_ActionMap_Select;
    public struct ActionMapActions
    {
        private @InputMapping m_Wrapper;
        public ActionMapActions(@InputMapping wrapper) { m_Wrapper = wrapper; }
        public InputAction @Right => m_Wrapper.m_ActionMap_Right;
        public InputAction @Down => m_Wrapper.m_ActionMap_Down;
        public InputAction @Up => m_Wrapper.m_ActionMap_Up;
        public InputAction @Left => m_Wrapper.m_ActionMap_Left;
        public InputAction @South => m_Wrapper.m_ActionMap_South;
        public InputAction @North => m_Wrapper.m_ActionMap_North;
        public InputAction @West => m_Wrapper.m_ActionMap_West;
        public InputAction @East => m_Wrapper.m_ActionMap_East;
        public InputAction @LT => m_Wrapper.m_ActionMap_LT;
        public InputAction @LB => m_Wrapper.m_ActionMap_LB;
        public InputAction @RT => m_Wrapper.m_ActionMap_RT;
        public InputAction @RB => m_Wrapper.m_ActionMap_RB;
        public InputAction @Start => m_Wrapper.m_ActionMap_Start;
        public InputAction @Select => m_Wrapper.m_ActionMap_Select;
        public InputActionMap Get() { return m_Wrapper.m_ActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IActionMapActions instance)
        {
            if (m_Wrapper.m_ActionMapActionsCallbackInterface != null)
            {
                @Right.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRight;
                @Down.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnDown;
                @Up.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnUp;
                @Left.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLeft;
                @South.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSouth;
                @South.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSouth;
                @South.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSouth;
                @North.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnNorth;
                @North.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnNorth;
                @North.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnNorth;
                @West.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnWest;
                @West.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnWest;
                @West.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnWest;
                @East.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnEast;
                @East.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnEast;
                @East.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnEast;
                @LT.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLT;
                @LT.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLT;
                @LT.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLT;
                @LB.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLB;
                @LB.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLB;
                @LB.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnLB;
                @RT.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRT;
                @RT.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRT;
                @RT.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRT;
                @RB.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRB;
                @RB.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRB;
                @RB.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnRB;
                @Start.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnStart;
                @Select.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_ActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @South.started += instance.OnSouth;
                @South.performed += instance.OnSouth;
                @South.canceled += instance.OnSouth;
                @North.started += instance.OnNorth;
                @North.performed += instance.OnNorth;
                @North.canceled += instance.OnNorth;
                @West.started += instance.OnWest;
                @West.performed += instance.OnWest;
                @West.canceled += instance.OnWest;
                @East.started += instance.OnEast;
                @East.performed += instance.OnEast;
                @East.canceled += instance.OnEast;
                @LT.started += instance.OnLT;
                @LT.performed += instance.OnLT;
                @LT.canceled += instance.OnLT;
                @LB.started += instance.OnLB;
                @LB.performed += instance.OnLB;
                @LB.canceled += instance.OnLB;
                @RT.started += instance.OnRT;
                @RT.performed += instance.OnRT;
                @RT.canceled += instance.OnRT;
                @RB.started += instance.OnRB;
                @RB.performed += instance.OnRB;
                @RB.canceled += instance.OnRB;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public ActionMapActions @ActionMap => new ActionMapActions(this);
    public interface IActionMapActions
    {
        void OnRight(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnSouth(InputAction.CallbackContext context);
        void OnNorth(InputAction.CallbackContext context);
        void OnWest(InputAction.CallbackContext context);
        void OnEast(InputAction.CallbackContext context);
        void OnLT(InputAction.CallbackContext context);
        void OnLB(InputAction.CallbackContext context);
        void OnRT(InputAction.CallbackContext context);
        void OnRB(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
